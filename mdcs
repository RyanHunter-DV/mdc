#! /usr/bin/env ruby

require 'rhload';
$TOOLHOME = File.dirname(File.absolute_path(__FILE__));
$LOAD_PATH << $TOOLHOME;


def __changeSrcFileNameToTarget__ fn ##{{{
	md = /src-(.*)\.md/.match(fn);
	return fn if not md;
	return md[1];
end ##}}}
def __generateDirRecursively__ full ##{{{
	toCreate = [];
	p = File.dirname(full);
	existed = false;
	while (existed==false) do
		if (Dir.exists?(p))
			existed = true;
			break;
		end
		toCreate << p;
		p = File.dirname(p);
	end
	toCreate.reverse.each do |np|
		puts "creating dir: #{np}";
		Dir.mkdir np;
	end
	return;
end ##}}}



def main ##{{{
	sp = ARGV.shift;
	tp = ARGV.shift;
	## puts "sourcePath: #{sp}, targetPath: #{tp}";
	output = `find #{sp}/ -name "*.sv*.md"`;
	files = output.split("\n");
	## puts files;

	files.each do |f|
		puts "start converting file(#{f}) ... ...";
		sroot = sp.dup;
		troot = tp.dup;
		tdir = File.dirname(f);
		tfile= File.basename(f);
		sroot.sub!(/\/ *$/,'');
		ptrn = Regexp.new("#{sroot}");
		tdir.sub!(ptrn,troot);
		tfile = __changeSrcFileNameToTarget__(tfile);
		tfile = File.join(tdir,tfile);
		__generateDirRecursively__(tfile);

		output = `mdc -s #{f} -o #{tdir}`;
		puts output;
	end
	return 0;
end ##}}}

$SIG = main();
exit $SIG;
